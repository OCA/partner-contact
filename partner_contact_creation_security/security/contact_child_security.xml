<?xml version="1.0" encoding="utf-8"?>
<!--Create a new Extra Right group that can read, create, and edit the "Child" level (individual) contacts of "Parent" level (company) contacts, but only read the parent level contacts.-->
<odoo noupdate="1">
	<record id="group_child_contact_creator" model="res.groups"><!--create record fo this new group-->
		<!--name this group-->
		<field name="name">Child Contact Creation</field><!--name this group-->
		<field name="category_id" ref="base.module_category_usability"/>
		<!--assign this group to base users. this would inherit User types/Internal User.  Daniel recommended adding users instead of inheriting here-->
		<field name="implied_ids" eval="[(4, ref('base.group_user'))]"/>
	</record>
	<!--record rule that only allows the Child Address Creation group permission to edit individual contacts for companies, but not Companies-->
	<!--creat a record id(named anything you want) assigned to the ir.rule model-->
	<record id="child_contact_record_rule" model="ir.rule">
		<!--Title that will be in the Groups-->
		<field name="name">Contact Address Creation</field>
		<!--xml id from res.partner model -->
		<field name="model_id" ref="base.model_res_partner"/> 
		<!--logic that limits this group to creating child contacts only (if parent_id exists) -->
		<field name="domain_force">[('parent_id','!=', False)]</field>
		<!--add group(created above) that this rule applies to-->
		<field name="groups" eval="[(4, ref('group_child_contact_creator'))]"/>
		<!--restrict read access-->
		<field name="perm_read" eval="False"/>
		<!--give edit/update access-->
		<field name="perm_write" eval="True"/>
		<!--give create access-->
		<field name="perm_create" eval="True"/>
		<!--restrict delete access-->
		<field name="perm_unlink" eval="False"/>
	</record>
</odoo>